<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:amq="http://activemq.apache.org/schema/core"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd">

    <bean id="webContentParser"
        class="com.mothsoft.alexis.engine.textual.WebContentParserImpl" />

    <!-- JMS -->
    <amq:broker useJmx="false" persistent="true">
        <amq:persistenceAdapter>
            <amq:kahaDB directory="${alexis.activemq.directory}" />
        </amq:persistenceAdapter>
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:61616" />
        </amq:transportConnectors>
    </amq:broker>

    <!-- integration with NLP queues -->
    <amq:queue id="stanfordRequestQueue" physicalName="queue.stanford.request"
        name="queue.stanford.request" />
    <amq:queue id="stanfordResponseQueue" physicalName="queue.stanford.response"
        name="queue.stanford.response" />

    <bean id="jmsConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="vm://localhost" />
                <property name="dispatchAsync" value="true" />
            </bean>
        </property>
    </bean>
    
    <bean id="parseResponseMessageListener"
        class="com.mothsoft.alexis.engine.textual.ParseResponseMessageListener">
        <constructor-arg index="0" ref="documentDao" />
        <constructor-arg index="1" ref="topicMatcherQueue" />
    </bean>

    <bean id="parseResponseMessageListenerContainer"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer"
        destroy-method="destroy">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="destination" ref="stanfordResponseQueue" />
        <property name="messageListener" ref="parseResponseMessageListener" />
        <property name="sessionTransacted" value="true" />
    </bean>

    <!-- document retrieval queue for asynchronous fetching of documents -->
    <amq:queue id="documentRetrievalQueue" physicalName="queue.alexis.document.retrieval"
        name="queue.alexis.document.retrieval" />

    <bean id="documentRetrievalJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="defaultDestination" ref="documentRetrievalQueue" />
    </bean>

    <bean id="documentRetrievalMessageListenerContainer"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer"
        destroy-method="destroy">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="destination" ref="documentRetrievalQueue" />
        <property name="messageListener" ref="documentRetrievalMessageListener" />
        <property name="sessionTransacted" value="true" />
    </bean>

    <bean id="documentRetrievalMessageListener"
        class="com.mothsoft.alexis.engine.textual.RetrieveDocumentMessageListener">
        <constructor-arg index="0" ref="documentDao" />
        <constructor-arg index="1" ref="documentExtractionJmsTemplate" />
    </bean>

    <!-- document extraction queue for asynchronous extraction of document content -->
    <amq:queue id="documentExtractionQueue" physicalName="queue.alexis.document.extraction"
        name="queue.alexis.document.extraction" />

    <bean id="documentExtractionJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="defaultDestination" ref="documentExtractionQueue" />
    </bean>

    <bean id="documentExtractionMessageListenerContainer"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer"
        destroy-method="destroy">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="destination" ref="documentExtractionQueue" />
        <property name="messageListener" ref="documentExtractionMessageListener" />
        <property name="sessionTransacted" value="true" />
    </bean>

    <bean id="documentExtractionMessageListener"
        class="com.mothsoft.alexis.engine.textual.DocumentExtractionMessageListener">
        <constructor-arg index="0" ref="documentDao" />
    </bean>

    <!-- topic matcher queue  -->
    <amq:queue id="topicMatcherQueue" physicalName="queue.alexis.topic.matcher"
        name="queue.alexis.topic.matcher" />

    <bean id="topicMatcherMessageListener"
        class="com.mothsoft.alexis.engine.textual.TopicMatcherMessageListener">
        <constructor-arg index="0" ref="documentDao" />
        <constructor-arg index="1" ref="topicDocumentMatcher" />
    </bean>

    <bean id="topicMatcherMessageListenerContainer"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer"
        destroy-method="destroy">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="destination" ref="topicMatcherQueue" />
        <property name="messageListener" ref="topicMatcherMessageListener" />
        <property name="sessionTransacted" value="true" />
    </bean>
    
    <bean id="topicDocumentMatcher" class="com.mothsoft.alexis.engine.textual.TopicDocumentMatcherImpl">
        <constructor-arg index="0" ref="topicDao" />
        <constructor-arg index="1" ref="documentDao" />    
    </bean> 
        
</beans>